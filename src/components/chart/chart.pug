mixin chart({great, good, norm, bad })
	-
		const arrayVotes = [great, good, norm, bad];
		const gradients = [
			{ id: "gradient-great", from: "#FFBA9C", to: "#FFE39C" },
			{ id: "gradient-good", from: "#66D2EA", to: "#6FCF97" },
			{ id: "gradient-norm", from: "#8BA4F9", to: "#BC9CFF" },
			{ id: "gradient-bad", from: "#909090", to: "#3D4975" },
		]
		
		function dashStartArray(array) {
			const summArray = array.reduce((sum, item) => Number(item)+sum, 0 );
			const arrayPercent = array.map(item => item === 0 ? 0 : (item / summArray)*100);
			return arrayPercent;
		}
		
		function dashOffsetArray(dashValues) {
			return dashValues.reduce((acc, _, index) => {   
				const previousSum = dashValues.slice(0, index).reduce((sum, val) => sum + val, 0);
				acc.push(-(previousSum+25));
				return acc;
			}, []);
		}

		function dashJoin(startDashes, dashOffset) {
			const array = [];
			const gap = 0.7;
			for (let i = 0; i < startDashes.length; i++) {
				const dashValue = Math.max(0, startDashes[i] - gap);
				const gapValue = 100 - startDashes[i] + gap;
				array.push({
					dasharray: `${dashValue} ${gapValue}`, 
					dashoffset: dashOffset[i]  
				});
			}
			return array;
		}

		const start = dashStartArray(arrayVotes);
		const offset = dashOffsetArray(start);

		const dashes = dashJoin(start, offset);

	.chart
		svg.chart__diagram(width="130" height="130" viewBox="0 0 34.5 34.5")
			defs 
				each gradient in gradients
					linearGradient(id=gradient.id x1="0%", y1="100%", x2="50%", y2="100%")
						stop(offset="0%", stop-color=`${gradient.from}`)
						stop(offset="100%", stop-color=`${gradient.to}`)
			each dash, key in dashes
				if (Number(arrayVotes[key] > 0))	
					circle.chart__unit(r="15.91549" cx="50%" cy="50%" fill= "none" stroke=`url(#${gradients[key].id})` stroke-dasharray= dash.dasharray stroke-dashoffset= dash.dashoffset )
				g.chart__group-text(fill=`url(#${gradients[key].id})` dy="0.3em") 	
					text.chart__text( x="50%" y="50%" text-anchor="middle")= arrayVotes[key]
					text.chart__label(x="50%" y="50%" text-anchor="middle") голосов
		ul.chart__legend 
			li.chart__caption-item великолепно
			li.chart__caption-item хорошо
			li.chart__caption-item удовлетворительно
			li.chart__caption-item разочарован